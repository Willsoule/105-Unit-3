{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introduction\n",
    "First dowload anaconda to your laptop. \n",
    "Create a folder on your computer containing the United_States_Covid_19_Cases_Deaths_by_State_Over_Time_-_Archived.csv file\n",
    "Now, upload Jupyter Lab through Anaconda Navigator\n",
    "# Using the Pandas Package for Data Analysis\n",
    "\n",
    "This notebook will walk us through a quick tutorial in using the pandas package for Covid- 19 data anlysis of North Carolina through python.\n",
    "\n",
    "### Procedural Overview\n",
    "\n",
    "To make complex data sets more easy to take in, we will take a single state (North Carolina) and show a display of just the new cases and deaths just from North Carolina. We will do this through Python, by importing Pandas as packages.\n",
    "\n",
    "# Constructing the Data\n",
    "We will import pandas as an object so we can manipulate the date using the following code\n",
    " First we must upload our.csv file we need to use. \n",
    " Next we are going to import pandas using the command"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "df=pd.read_csv(\"United_States_COVID-19_Cases_and_Deaths_by_State_over_Time_-_ARCHIVED.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Code import pandas as pd to simplify your function\n",
    "### Simplifying our Data\n",
    "Press shift and return to activate the csv file into the code.\n",
    "To find out how big our data table is going to be, we can code df.shape to figure out how many rows and columns there are.\n",
    "df.dtypes allows you to figure out the labels of each column in the data set\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(60060, 15)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "submission_date     object\n",
       "state               object\n",
       "tot_cases            int64\n",
       "conf_cases         float64\n",
       "prob_cases         float64\n",
       "new_case             int64\n",
       "pnew_case          float64\n",
       "tot_death            int64\n",
       "conf_death         float64\n",
       "prob_death         float64\n",
       "new_death            int64\n",
       "pnew_death         float64\n",
       "created_at          object\n",
       "consent_cases       object\n",
       "consent_deaths      object\n",
       "dtype: object"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Continuing to digest our data\n",
    "To make our data more concise, we can code df.loc (which basically infers we can locate specific columns to our dataset. In this example we want to specify the data of North Carolina, which falls under the dtype \"state\" so we code. df.loc to minimize our columns and then we change the state to \"NC\" so we get the new cases and deaths of North Carolina "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>state</th>\n",
       "      <th>new_case</th>\n",
       "      <th>new_death</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>KS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ND</td>\n",
       "      <td>589</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AS</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AL</td>\n",
       "      <td>703</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AK</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60055</th>\n",
       "      <td>TX</td>\n",
       "      <td>13329</td>\n",
       "      <td>207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60056</th>\n",
       "      <td>FL</td>\n",
       "      <td>8217</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60057</th>\n",
       "      <td>NM</td>\n",
       "      <td>92</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60058</th>\n",
       "      <td>MS</td>\n",
       "      <td>521</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60059</th>\n",
       "      <td>MA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>60060 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      state  new_case  new_death\n",
       "0        KS         0          0\n",
       "1        ND       589          9\n",
       "2        AS         0          0\n",
       "3        AL       703          7\n",
       "4        AK         0          0\n",
       "...     ...       ...        ...\n",
       "60055    TX     13329        207\n",
       "60056    FL      8217         79\n",
       "60057    NM        92          4\n",
       "60058    MS       521          9\n",
       "60059    MA         0          0\n",
       "\n",
       "[60060 rows x 3 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[:,[\"state\",\"new_case\",\"new_death\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>submission_date</th>\n",
       "      <th>state</th>\n",
       "      <th>tot_cases</th>\n",
       "      <th>conf_cases</th>\n",
       "      <th>prob_cases</th>\n",
       "      <th>new_case</th>\n",
       "      <th>pnew_case</th>\n",
       "      <th>tot_death</th>\n",
       "      <th>conf_death</th>\n",
       "      <th>prob_death</th>\n",
       "      <th>new_death</th>\n",
       "      <th>pnew_death</th>\n",
       "      <th>created_at</th>\n",
       "      <th>consent_cases</th>\n",
       "      <th>consent_deaths</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>15549</th>\n",
       "      <td>02/25/2021</td>\n",
       "      <td>NC</td>\n",
       "      <td>846182</td>\n",
       "      <td>743572.0</td>\n",
       "      <td>102610.0</td>\n",
       "      <td>2879</td>\n",
       "      <td>611.0</td>\n",
       "      <td>12243</td>\n",
       "      <td>10824.0</td>\n",
       "      <td>1419.0</td>\n",
       "      <td>28</td>\n",
       "      <td>7.0</td>\n",
       "      <td>02/25/2021 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15559</th>\n",
       "      <td>09/15/2022</td>\n",
       "      <td>NC</td>\n",
       "      <td>3173734</td>\n",
       "      <td>2625651.0</td>\n",
       "      <td>548083.0</td>\n",
       "      <td>3436</td>\n",
       "      <td>863.0</td>\n",
       "      <td>26730</td>\n",
       "      <td>23226.0</td>\n",
       "      <td>3504.0</td>\n",
       "      <td>13</td>\n",
       "      <td>2.0</td>\n",
       "      <td>09/15/2022 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15577</th>\n",
       "      <td>01/17/2021</td>\n",
       "      <td>NC</td>\n",
       "      <td>681484</td>\n",
       "      <td>614256.0</td>\n",
       "      <td>67228.0</td>\n",
       "      <td>6330</td>\n",
       "      <td>421.0</td>\n",
       "      <td>9639</td>\n",
       "      <td>8708.0</td>\n",
       "      <td>931.0</td>\n",
       "      <td>101</td>\n",
       "      <td>22.0</td>\n",
       "      <td>01/17/2021 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15678</th>\n",
       "      <td>07/07/2021</td>\n",
       "      <td>NC</td>\n",
       "      <td>1003828</td>\n",
       "      <td>862333.0</td>\n",
       "      <td>141495.0</td>\n",
       "      <td>676</td>\n",
       "      <td>200.0</td>\n",
       "      <td>13677</td>\n",
       "      <td>12061.0</td>\n",
       "      <td>1616.0</td>\n",
       "      <td>8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07/07/2021 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15689</th>\n",
       "      <td>03/01/2021</td>\n",
       "      <td>NC</td>\n",
       "      <td>853600</td>\n",
       "      <td>749574.0</td>\n",
       "      <td>104026.0</td>\n",
       "      <td>1031</td>\n",
       "      <td>204.0</td>\n",
       "      <td>12344</td>\n",
       "      <td>10915.0</td>\n",
       "      <td>1429.0</td>\n",
       "      <td>21</td>\n",
       "      <td>4.0</td>\n",
       "      <td>03/01/2021 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44336</th>\n",
       "      <td>01/18/2021</td>\n",
       "      <td>NC</td>\n",
       "      <td>685646</td>\n",
       "      <td>618010.0</td>\n",
       "      <td>67636.0</td>\n",
       "      <td>4162</td>\n",
       "      <td>408.0</td>\n",
       "      <td>9724</td>\n",
       "      <td>8774.0</td>\n",
       "      <td>950.0</td>\n",
       "      <td>85</td>\n",
       "      <td>19.0</td>\n",
       "      <td>01/18/2021 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44343</th>\n",
       "      <td>07/23/2020</td>\n",
       "      <td>NC</td>\n",
       "      <td>107210</td>\n",
       "      <td>106712.0</td>\n",
       "      <td>498.0</td>\n",
       "      <td>2411</td>\n",
       "      <td>54.0</td>\n",
       "      <td>1890</td>\n",
       "      <td>1888.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>27</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07/23/2020 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44389</th>\n",
       "      <td>12/02/2021</td>\n",
       "      <td>NC</td>\n",
       "      <td>1530257</td>\n",
       "      <td>1294735.0</td>\n",
       "      <td>235522.0</td>\n",
       "      <td>3856</td>\n",
       "      <td>821.0</td>\n",
       "      <td>19101</td>\n",
       "      <td>16814.0</td>\n",
       "      <td>2287.0</td>\n",
       "      <td>19</td>\n",
       "      <td>7.0</td>\n",
       "      <td>12/02/2021 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44408</th>\n",
       "      <td>10/20/2021</td>\n",
       "      <td>NC</td>\n",
       "      <td>1449876</td>\n",
       "      <td>1231282.0</td>\n",
       "      <td>218594.0</td>\n",
       "      <td>2453</td>\n",
       "      <td>555.0</td>\n",
       "      <td>18162</td>\n",
       "      <td>15970.0</td>\n",
       "      <td>2192.0</td>\n",
       "      <td>52</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10/20/2021 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44532</th>\n",
       "      <td>11/07/2020</td>\n",
       "      <td>NC</td>\n",
       "      <td>290231</td>\n",
       "      <td>276969.0</td>\n",
       "      <td>13262.0</td>\n",
       "      <td>2504</td>\n",
       "      <td>295.0</td>\n",
       "      <td>4982</td>\n",
       "      <td>4855.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>35</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11/07/2020 12:00:00 AM</td>\n",
       "      <td>Agree</td>\n",
       "      <td>Agree</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1001 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      submission_date state  tot_cases  conf_cases  prob_cases  new_case  \\\n",
       "15549      02/25/2021    NC     846182    743572.0    102610.0      2879   \n",
       "15559      09/15/2022    NC    3173734   2625651.0    548083.0      3436   \n",
       "15577      01/17/2021    NC     681484    614256.0     67228.0      6330   \n",
       "15678      07/07/2021    NC    1003828    862333.0    141495.0       676   \n",
       "15689      03/01/2021    NC     853600    749574.0    104026.0      1031   \n",
       "...               ...   ...        ...         ...         ...       ...   \n",
       "44336      01/18/2021    NC     685646    618010.0     67636.0      4162   \n",
       "44343      07/23/2020    NC     107210    106712.0       498.0      2411   \n",
       "44389      12/02/2021    NC    1530257   1294735.0    235522.0      3856   \n",
       "44408      10/20/2021    NC    1449876   1231282.0    218594.0      2453   \n",
       "44532      11/07/2020    NC     290231    276969.0     13262.0      2504   \n",
       "\n",
       "       pnew_case  tot_death  conf_death  prob_death  new_death  pnew_death  \\\n",
       "15549      611.0      12243     10824.0      1419.0         28         7.0   \n",
       "15559      863.0      26730     23226.0      3504.0         13         2.0   \n",
       "15577      421.0       9639      8708.0       931.0        101        22.0   \n",
       "15678      200.0      13677     12061.0      1616.0          8         0.0   \n",
       "15689      204.0      12344     10915.0      1429.0         21         4.0   \n",
       "...          ...        ...         ...         ...        ...         ...   \n",
       "44336      408.0       9724      8774.0       950.0         85        19.0   \n",
       "44343       54.0       1890      1888.0         2.0         27         0.0   \n",
       "44389      821.0      19101     16814.0      2287.0         19         7.0   \n",
       "44408      555.0      18162     15970.0      2192.0         52         7.0   \n",
       "44532      295.0       4982      4855.0       127.0         35         3.0   \n",
       "\n",
       "                   created_at consent_cases consent_deaths  \n",
       "15549  02/25/2021 12:00:00 AM         Agree          Agree  \n",
       "15559  09/15/2022 12:00:00 AM         Agree          Agree  \n",
       "15577  01/17/2021 12:00:00 AM         Agree          Agree  \n",
       "15678  07/07/2021 12:00:00 AM         Agree          Agree  \n",
       "15689  03/01/2021 12:00:00 AM         Agree          Agree  \n",
       "...                       ...           ...            ...  \n",
       "44336  01/18/2021 12:00:00 AM         Agree          Agree  \n",
       "44343  07/23/2020 12:00:00 AM         Agree          Agree  \n",
       "44389  12/02/2021 12:00:00 AM         Agree          Agree  \n",
       "44408  10/20/2021 12:00:00 AM         Agree          Agree  \n",
       "44532  11/07/2020 12:00:00 AM         Agree          Agree  \n",
       "\n",
       "[1001 rows x 15 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df[\"state\"] == \"NC\"]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
