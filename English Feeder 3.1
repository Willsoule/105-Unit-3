Procedural Overview

To make complex data sets more easy to take in, we will take a single state (North Carolina) and show a display of just the new cases and deaths just from North Carolina. We will do this through Python, by importing Pandas as packages.

Introduction

To get started, you must download Anaconda.Navigator from your laptop 1. Once Anaconda is downloaded, launch the jupyterlab portal. 2. One you have opened jupyter lab, download the data you would like to code in python as a csv.file 3. Simultaneously, create a folder on your computer that has all the files you will import to Jupiter 4. Your csv file will need to be imported and packaged into Python as pandas 5. Code import pandas as pd to simplify your function

Constructing Our Own Data

We will import pandas as an object so we can manipulate the data using the following code First we must upload our.csv file we need to use. Next we are going to import pandas using the command

[1]:

import pandas as pd
import numpy as np
df=pd.read_csv("United_States_COVID-19_Cases_and_Deaths_by_State_over_Time_-_ARCHIVED.csv")
Code import pandas as pd to simplify your function

Simplifying our Data

Press shift and return to activate the csv file into the code. To find out how big our data table is going to be, we can code df.shape to figure out how many rows and columns there are. df.dtypes allows you to figure out the labels of each column in the data set

[3]:

df.shape
[3]:
(60060, 15)
[4]:

df.dtypes
[4]:
submission_date     object
state               object
tot_cases            int64
conf_cases         float64
prob_cases         float64
new_case             int64
pnew_case          float64
tot_death            int64
conf_death         float64
prob_death         float64
new_death            int64
pnew_death         float64
created_at          object
consent_cases       object
consent_deaths      object
dtype: object
Continuing to digest our data

To make our data more concise, we can code df.loc (which basically infers we can locate specific columns to our dataset. In this example we want to specify the data of North Carolina, which falls under the dtype "state" so we code. df.loc to minimize our columns and then we change the state to "NC" so we get the new cases and deaths of North Carolina

[9]:

df.loc[:,["state","new_case","new_death"]]
[9]:
state	new_case	new_death
0	KS	0	0
1	ND	589	9
2	AS	0	0
3	AL	703	7
4	AK	0	0
...	...	...	...
60055	TX	13329	207
60056	FL	8217	79
60057	NM	92	4
60058	MS	521	9
60059	MA	0	0
60060 rows Ã— 3 columns

[ ]:

df[df["state"] == "NC"]
Conclusion

Now open the .ipyn files you created last time: run the cells to import pandas and numpy run the cells to create a dataframe using pd.read_csv start manipulating your own data!
